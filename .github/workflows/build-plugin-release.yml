name: Build Plugin Release

on:
  push:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      - name: Setup NodeJS v16
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16
#          cache: yarn
#
#      - name: Compile Assets
#        run: |
#          yarn install --frozen-lockfile --ignore-scripts
#          yarn run lint:scripts
#          yarn run lint:styles
#          yarn run build:production
#
#      - name: Cache Composer Dependencies
#        uses: actions/cache@v3
#        with:
#          path: /tmp/composer-cache
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-composer-
#
#      - name: Install Composer Dependencies
#        uses: php-actions/composer@v6
#        with:
#          progress: 'yes'
#          php_version: '7.4'
#          command: update --optimize-autoloader
#
#      - name: Composer Script - Lint PHP Files
#        uses: php-actions/composer@v6
#        with:
#          php_version: '7.4'
#          command: run-script lint:php
#
#      - name: Composer Script - Build Archive
#        uses: php-actions/composer@v6
#        with:
#          progress: 'yes'
#          php_version: '7.4'
#          command: run-script build:production
#
#      - name: Upload build as artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: plugin-build
#          path: pull-comments-other-pages.zip

  e2e-tests:
#    needs: [build]
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wpuser
          MYSQL_PASSWORD: ${{ secrets.MYSQL_DB_PASSWORD }}
        options: >-
          --health-cmd "mysql --user=wpuser --password=$MYSQL_PASSWORD --execute \"SHOW DATABASES LIKE 'wordpress';\""
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
      wordpress:
        image: wordpress:6.0-php7.4-apache
        ports:
          - 80:80
        env:
          WORDPRESS_DB_HOST: mysql
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wpuser
          MYSQL_PASSWORD: ${{ secrets.MYSQL_DB_PASSWORD }}
        volumes:
          - wordpress:/var/www/html
        options: >-
          --health-cmd "bash -c \"[ -f /var/www/html/wp-config.php ]\""
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

#      - name: Download Build
#        uses: actions/download-artifact@v3
#        with:
#          name: plugin-build

      - name: List WordPress directory
        uses: docker://wordpress:cli-2.6-php7.4
        with:
          volumes: wordpress
          args: --volume wordpress ls -l /var/www/html

      - name: List WordPress config
        uses: docker://wordpress:cli-2.6-php7.4
        with:
          volumes: wordpress
          args: --volume wordpress cat /var/www/html/wp-config.php

#      - name: Install WordPress
#        uses: docker://wordpress:cli-2.6-php7.4
#        with:
#          args: --path=/var/www/html core install --admin_password=${{ secrets.WP_ADMIN_PASSWORD }}

#    steps:
#      - name: Composer Script - Generate .env
#        uses: php-actions/composer@v6
#        with:
#          php_version: '7.4'
#          command: run-script env:generate
#
#      - name: Publish Enviroment from .env
#        id: dotenv
#        uses: falti/dotenv-action@v0.2
#        with:
#          log-variables: true
#
#      - name: Output .env
#        run: |
#            echo ${{ steps.dotenv.outputs.DB_ROOT_PASSWORD }}
#            echo ${{ steps.dotenv.outputs.DB_PASSWORD }}

#  publish-gh-release:
#    needs: perform-e2e-tests
#    runs-on: ubuntu-latest
#      steps:
#      - name: Publish Release
#        uses: softprops/action-gh-release@v1
#        with:
#          draft: true
#          file: 'pull-comments-other-pages.zip'

#  upload-in-plugin-directory:
#    needs: perform-e2e-tests
#    runs-on: ubuntu-latest
#      steps: